openapi: 3.0.0
info:
  title: Person Service API
  description: REST API for managing users, addresses, countries and individuals.
  version: 1.0.0
servers:
  - url: https://localhost:8081/
paths:
  /users/{id}:
    get:
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
components:
  schemas:
    UserDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the user
        filled:
          type: boolean
          description: Whether the user profile is complete
        firstName:
          type: string
          description: First name of the user
        lastName:
          type: string
          description: Last name of the user
        email:
          type: string
          format: email
          description: Email of the user
        secretKey:
          type: string
          description: Secret key for authentication
        address:
          $ref: '#/components/schemas/AddressDTO'
      required:
        - id
        - firstName
        - lastName
        - email
    AddressDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the address
        city:
          type: string
          description: City name
        state:
          type: string
          description: State or region
        address:
          type: string
          description: Street address
        zipCode:
          type: string
          description: ZIP or postal code
        country:
          $ref: '#/components/schemas/CountriesDTO'
      required:
        - id
        - city
        - state
        - address
        - zipCode
    CountriesDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier of the country
        name:
          type: string
          description: Full name of the country
        alpha2:
          type: string
          description: Two-letter ISO code
        alpha3:
          type: string
          description: Three-letter ISO code
        status:
          type: string
          description: Status of the country (e.g., active, inactive)
      required:
        - id
        - name
        - alpha2
        - alpha3
    IndividualsDTO:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the individual
        status:
          type: string
          description: Status of the individual
        phoneNumber:
          type: string
          description: Phone number
        passportNumber:
          type: string
          description: Passport number
        user:
          $ref: '#/components/schemas/UserDTO'
      required:
        - id
        - status
        - phoneNumber
        - passportNumber
    AllInformationDTO:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserDTO'
        address:
          $ref: '#/components/schemas/AddressDTO'
        countries:
          $ref: '#/components/schemas/CountriesDTO'
        individuals:
          $ref: '#/components/schemas/IndividualsDTO'
      required:
        - user
        - address
        - countries
        - individuals
    ErrorDto:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Error message
      required:
        - status
        - message